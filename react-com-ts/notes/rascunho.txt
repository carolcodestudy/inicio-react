Arquivos

App.tsx - /primiero/src/components
Fala sobre os props opicionais

import { Header } from './components/header'
import { Student } from './components/student'
import { Footer } from './components/footer'

//Componente principal
const App = ()=>{
  //JSX é o que retornanmos para o HTML
  return(
    <div>
      <Header title='Texto não padronizado escrito em App.tsx'/>

      <Student name = "Ana Carolina" age={24}/>

      <Student name = "Josemar" age={43}/>

      <Footer/>
    </div>
  )
}

export default App

/components
header.tsx

import './header.css'

interface TitleProps{
    title ?: string
}

export function Header ( {title = "Titulo pradonizado no componente"} : TitleProps ){
    return(
        <header className="header">
            <h1 className="title">{title}</h1>
            <hr/>
        </header>
        
    )
}

header.css

@charset "UTF -08";

.header{
    width: 100%; background-color: brown; 
}

.title{
    color: whitesmoke; text-align: center; padding-top: 14px;
}

student.tsx

//Criar interface para por um valor nas propriedades isso é necessário para que o ts entenda o que quero
interface MyName{
    name : string
    age : number
  }
  
export function Student({ name, age } : MyName){
    return(
      <h2>Nome: {name} <br/> Idade: {age}</h2>
    )
  }

footer.tsx

export function Footer(){
    return(
        <footer>
            <p>Todos os direitos reservados- @cursos</p>
        </footer>
    )
}

Arquivo App.tsx antes de por lista:

import { useState } from 'react'

//Componente principal
const App = ()=>{

  //Estado das variáveis. input = armazena | setInput = faz a ação
  const [input, setInput] = useState("")
  const [student, setStudent] = useState("Aluno(a)")
  const [age, setAge] = useState<string | number>("")
  const [studentAge, setStudentAge] = useState<string | number>()

  const saveName = () =>{
    setStudent(input)
    setStudentAge(age)
  }

  //JSX é o que retornanmos para o HTML
  return(
    <div>
        <h1>Salvar o nome</h1>
        <input type="text" placeholder="Nome" value={input} onChange={(e) => setInput(e.target.value)} />
        <br /><br />
        <input type="text" placeholder='Idade' value={age} onChange={(e)=> setAge(e.target.value)}/>
        <button onClick={saveName}>Salvar</button>
        
        <br /><br />
        <h2>Nome: {student} <br /> {studentAge} anos</h2>
    </div>
  )
}

export default App

//Precisa colocar o input e o setInput, pois nada adiantará. O valor ficará vazio

App.tsx com o inicio dos estudos de userState 

import { useState } from 'react'

//Componente principal
const App = ()=>{

  //Estado das variáveis. input = armazena | setInput = faz a ação
  const [input, setInput] = useState("")
  const [age, setAge] = useState("")

  //Tipagem
  interface DateStudent{
    student : string,
    age :string
  }

  const [datesStudent, setDatesStudent] = useState<DateStudent>()

  const saveName = () =>{
    setDatesStudent({
      student : input,
      age : age
    })
  }

  //Criar contador
  const [counter , setCounter] = useState<number>(0)

  //Função para soma do contador
  const Add = () =>{
    setCounter(counter + 1)
  }

    //Função para subtrair do contador
    const Sub = () =>{
      //Não deixa chegar a -1
      if(counter === 0){
        return
      }
      setCounter(counter - 1)
    }

  //JSX é o que retornanmos para o HTML
  return(
    <div>
        <h1>Salvar o nome</h1>
        <input type="text" placeholder="Nome" value={input} onChange={(e) => setInput(e.target.value)} />
        <br /><br />
        <input type="text" placeholder='Idade' value={age} onChange={(e)=> setAge(e.target.value)}/>
        <button onClick={saveName}>Salvar</button>
        
        <br /><br />

        <h2>Nome:  { datesStudent?.student } <br /> { datesStudent?.age } anos</h2>

        <hr />
        <h3>Contador:</h3>
        <button onClick={Add}>more</button> {counter} <button onClick={Sub}>less</button>
    </div>
  )
}
export default App
//Precisa colocar o input e o setInput, pois nada adiantará. O valor ficará vazio